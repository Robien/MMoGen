// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Connection.proto

#ifndef PROTOBUF_Connection_2eproto__INCLUDED
#define PROTOBUF_Connection_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Connection {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Connection_2eproto();
void protobuf_AssignDesc_Connection_2eproto();
void protobuf_ShutdownFile_Connection_2eproto();

class MessageClientType;
class MessageServerType;
class MM;
class ACKMM;
class MatchFound;
class Ready;

enum MessageClientType_messageClientType {
  MessageClientType_messageClientType_MM = 0,
  MessageClientType_messageClientType_Ready = 1
};
bool MessageClientType_messageClientType_IsValid(int value);
const MessageClientType_messageClientType MessageClientType_messageClientType_messageClientType_MIN = MessageClientType_messageClientType_MM;
const MessageClientType_messageClientType MessageClientType_messageClientType_messageClientType_MAX = MessageClientType_messageClientType_Ready;
const int MessageClientType_messageClientType_messageClientType_ARRAYSIZE = MessageClientType_messageClientType_messageClientType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageClientType_messageClientType_descriptor();
inline const ::std::string& MessageClientType_messageClientType_Name(MessageClientType_messageClientType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageClientType_messageClientType_descriptor(), value);
}
inline bool MessageClientType_messageClientType_Parse(
    const ::std::string& name, MessageClientType_messageClientType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageClientType_messageClientType>(
    MessageClientType_messageClientType_descriptor(), name, value);
}
enum MessageServerType_messageServerType {
  MessageServerType_messageServerType_ACKMM = 0,
  MessageServerType_messageServerType_MatchFound = 1
};
bool MessageServerType_messageServerType_IsValid(int value);
const MessageServerType_messageServerType MessageServerType_messageServerType_messageServerType_MIN = MessageServerType_messageServerType_ACKMM;
const MessageServerType_messageServerType MessageServerType_messageServerType_messageServerType_MAX = MessageServerType_messageServerType_MatchFound;
const int MessageServerType_messageServerType_messageServerType_ARRAYSIZE = MessageServerType_messageServerType_messageServerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageServerType_messageServerType_descriptor();
inline const ::std::string& MessageServerType_messageServerType_Name(MessageServerType_messageServerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageServerType_messageServerType_descriptor(), value);
}
inline bool MessageServerType_messageServerType_Parse(
    const ::std::string& name, MessageServerType_messageServerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageServerType_messageServerType>(
    MessageServerType_messageServerType_descriptor(), name, value);
}
enum MM_MMCommandType {
  MM_MMCommandType_START = 0,
  MM_MMCommandType_STOP = 1
};
bool MM_MMCommandType_IsValid(int value);
const MM_MMCommandType MM_MMCommandType_MMCommandType_MIN = MM_MMCommandType_START;
const MM_MMCommandType MM_MMCommandType_MMCommandType_MAX = MM_MMCommandType_STOP;
const int MM_MMCommandType_MMCommandType_ARRAYSIZE = MM_MMCommandType_MMCommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MM_MMCommandType_descriptor();
inline const ::std::string& MM_MMCommandType_Name(MM_MMCommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MM_MMCommandType_descriptor(), value);
}
inline bool MM_MMCommandType_Parse(
    const ::std::string& name, MM_MMCommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MM_MMCommandType>(
    MM_MMCommandType_descriptor(), name, value);
}
// ===================================================================

class MessageClientType : public ::google::protobuf::Message {
 public:
  MessageClientType();
  virtual ~MessageClientType();

  MessageClientType(const MessageClientType& from);

  inline MessageClientType& operator=(const MessageClientType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageClientType& default_instance();

  void Swap(MessageClientType* other);

  // implements Message ----------------------------------------------

  MessageClientType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageClientType& from);
  void MergeFrom(const MessageClientType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MessageClientType_messageClientType messageClientType;
  static const messageClientType MM = MessageClientType_messageClientType_MM;
  static const messageClientType Ready = MessageClientType_messageClientType_Ready;
  static inline bool messageClientType_IsValid(int value) {
    return MessageClientType_messageClientType_IsValid(value);
  }
  static const messageClientType messageClientType_MIN =
    MessageClientType_messageClientType_messageClientType_MIN;
  static const messageClientType messageClientType_MAX =
    MessageClientType_messageClientType_messageClientType_MAX;
  static const int messageClientType_ARRAYSIZE =
    MessageClientType_messageClientType_messageClientType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  messageClientType_descriptor() {
    return MessageClientType_messageClientType_descriptor();
  }
  static inline const ::std::string& messageClientType_Name(messageClientType value) {
    return MessageClientType_messageClientType_Name(value);
  }
  static inline bool messageClientType_Parse(const ::std::string& name,
      messageClientType* value) {
    return MessageClientType_messageClientType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Connection.MessageClientType)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Connection_2eproto();
  friend void protobuf_AssignDesc_Connection_2eproto();
  friend void protobuf_ShutdownFile_Connection_2eproto();

  void InitAsDefaultInstance();
  static MessageClientType* default_instance_;
};
// -------------------------------------------------------------------

class MessageServerType : public ::google::protobuf::Message {
 public:
  MessageServerType();
  virtual ~MessageServerType();

  MessageServerType(const MessageServerType& from);

  inline MessageServerType& operator=(const MessageServerType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageServerType& default_instance();

  void Swap(MessageServerType* other);

  // implements Message ----------------------------------------------

  MessageServerType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageServerType& from);
  void MergeFrom(const MessageServerType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MessageServerType_messageServerType messageServerType;
  static const messageServerType ACKMM = MessageServerType_messageServerType_ACKMM;
  static const messageServerType MatchFound = MessageServerType_messageServerType_MatchFound;
  static inline bool messageServerType_IsValid(int value) {
    return MessageServerType_messageServerType_IsValid(value);
  }
  static const messageServerType messageServerType_MIN =
    MessageServerType_messageServerType_messageServerType_MIN;
  static const messageServerType messageServerType_MAX =
    MessageServerType_messageServerType_messageServerType_MAX;
  static const int messageServerType_ARRAYSIZE =
    MessageServerType_messageServerType_messageServerType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  messageServerType_descriptor() {
    return MessageServerType_messageServerType_descriptor();
  }
  static inline const ::std::string& messageServerType_Name(messageServerType value) {
    return MessageServerType_messageServerType_Name(value);
  }
  static inline bool messageServerType_Parse(const ::std::string& name,
      messageServerType* value) {
    return MessageServerType_messageServerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Connection.MessageServerType)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Connection_2eproto();
  friend void protobuf_AssignDesc_Connection_2eproto();
  friend void protobuf_ShutdownFile_Connection_2eproto();

  void InitAsDefaultInstance();
  static MessageServerType* default_instance_;
};
// -------------------------------------------------------------------

class MM : public ::google::protobuf::Message {
 public:
  MM();
  virtual ~MM();

  MM(const MM& from);

  inline MM& operator=(const MM& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MM& default_instance();

  void Swap(MM* other);

  // implements Message ----------------------------------------------

  MM* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MM& from);
  void MergeFrom(const MM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MM_MMCommandType MMCommandType;
  static const MMCommandType START = MM_MMCommandType_START;
  static const MMCommandType STOP = MM_MMCommandType_STOP;
  static inline bool MMCommandType_IsValid(int value) {
    return MM_MMCommandType_IsValid(value);
  }
  static const MMCommandType MMCommandType_MIN =
    MM_MMCommandType_MMCommandType_MIN;
  static const MMCommandType MMCommandType_MAX =
    MM_MMCommandType_MMCommandType_MAX;
  static const int MMCommandType_ARRAYSIZE =
    MM_MMCommandType_MMCommandType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MMCommandType_descriptor() {
    return MM_MMCommandType_descriptor();
  }
  static inline const ::std::string& MMCommandType_Name(MMCommandType value) {
    return MM_MMCommandType_Name(value);
  }
  static inline bool MMCommandType_Parse(const ::std::string& name,
      MMCommandType* value) {
    return MM_MMCommandType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 versionMajor = 1;
  inline bool has_versionmajor() const;
  inline void clear_versionmajor();
  static const int kVersionMajorFieldNumber = 1;
  inline ::google::protobuf::int32 versionmajor() const;
  inline void set_versionmajor(::google::protobuf::int32 value);

  // required int32 versionMinor = 2;
  inline bool has_versionminor() const;
  inline void clear_versionminor();
  static const int kVersionMinorFieldNumber = 2;
  inline ::google::protobuf::int32 versionminor() const;
  inline void set_versionminor(::google::protobuf::int32 value);

  // optional .Connection.MM.MMCommandType command = 3 [default = START];
  inline bool has_command() const;
  inline void clear_command();
  static const int kCommandFieldNumber = 3;
  inline ::Connection::MM_MMCommandType command() const;
  inline void set_command(::Connection::MM_MMCommandType value);

  // optional int32 Elo = 4 [default = 0];
  inline bool has_elo() const;
  inline void clear_elo();
  static const int kEloFieldNumber = 4;
  inline ::google::protobuf::int32 elo() const;
  inline void set_elo(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Connection.MM)
 private:
  inline void set_has_versionmajor();
  inline void clear_has_versionmajor();
  inline void set_has_versionminor();
  inline void clear_has_versionminor();
  inline void set_has_command();
  inline void clear_has_command();
  inline void set_has_elo();
  inline void clear_has_elo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 versionmajor_;
  ::google::protobuf::int32 versionminor_;
  int command_;
  ::google::protobuf::int32 elo_;
  friend void  protobuf_AddDesc_Connection_2eproto();
  friend void protobuf_AssignDesc_Connection_2eproto();
  friend void protobuf_ShutdownFile_Connection_2eproto();

  void InitAsDefaultInstance();
  static MM* default_instance_;
};
// -------------------------------------------------------------------

class ACKMM : public ::google::protobuf::Message {
 public:
  ACKMM();
  virtual ~ACKMM();

  ACKMM(const ACKMM& from);

  inline ACKMM& operator=(const ACKMM& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACKMM& default_instance();

  void Swap(ACKMM* other);

  // implements Message ----------------------------------------------

  ACKMM* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACKMM& from);
  void MergeFrom(const ACKMM& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool isOk = 1;
  inline bool has_isok() const;
  inline void clear_isok();
  static const int kIsOkFieldNumber = 1;
  inline bool isok() const;
  inline void set_isok(bool value);

  // @@protoc_insertion_point(class_scope:Connection.ACKMM)
 private:
  inline void set_has_isok();
  inline void clear_has_isok();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool isok_;
  friend void  protobuf_AddDesc_Connection_2eproto();
  friend void protobuf_AssignDesc_Connection_2eproto();
  friend void protobuf_ShutdownFile_Connection_2eproto();

  void InitAsDefaultInstance();
  static ACKMM* default_instance_;
};
// -------------------------------------------------------------------

class MatchFound : public ::google::protobuf::Message {
 public:
  MatchFound();
  virtual ~MatchFound();

  MatchFound(const MatchFound& from);

  inline MatchFound& operator=(const MatchFound& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchFound& default_instance();

  void Swap(MatchFound* other);

  // implements Message ----------------------------------------------

  MatchFound* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatchFound& from);
  void MergeFrom(const MatchFound& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Connection.MatchFound)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Connection_2eproto();
  friend void protobuf_AssignDesc_Connection_2eproto();
  friend void protobuf_ShutdownFile_Connection_2eproto();

  void InitAsDefaultInstance();
  static MatchFound* default_instance_;
};
// -------------------------------------------------------------------

class Ready : public ::google::protobuf::Message {
 public:
  Ready();
  virtual ~Ready();

  Ready(const Ready& from);

  inline Ready& operator=(const Ready& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Ready& default_instance();

  void Swap(Ready* other);

  // implements Message ----------------------------------------------

  Ready* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ready& from);
  void MergeFrom(const Ready& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Connection.Ready)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Connection_2eproto();
  friend void protobuf_AssignDesc_Connection_2eproto();
  friend void protobuf_ShutdownFile_Connection_2eproto();

  void InitAsDefaultInstance();
  static Ready* default_instance_;
};
// ===================================================================


// ===================================================================

// MessageClientType

// -------------------------------------------------------------------

// MessageServerType

// -------------------------------------------------------------------

// MM

// required int32 versionMajor = 1;
inline bool MM::has_versionmajor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MM::set_has_versionmajor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MM::clear_has_versionmajor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MM::clear_versionmajor() {
  versionmajor_ = 0;
  clear_has_versionmajor();
}
inline ::google::protobuf::int32 MM::versionmajor() const {
  // @@protoc_insertion_point(field_get:Connection.MM.versionMajor)
  return versionmajor_;
}
inline void MM::set_versionmajor(::google::protobuf::int32 value) {
  set_has_versionmajor();
  versionmajor_ = value;
  // @@protoc_insertion_point(field_set:Connection.MM.versionMajor)
}

// required int32 versionMinor = 2;
inline bool MM::has_versionminor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MM::set_has_versionminor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MM::clear_has_versionminor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MM::clear_versionminor() {
  versionminor_ = 0;
  clear_has_versionminor();
}
inline ::google::protobuf::int32 MM::versionminor() const {
  // @@protoc_insertion_point(field_get:Connection.MM.versionMinor)
  return versionminor_;
}
inline void MM::set_versionminor(::google::protobuf::int32 value) {
  set_has_versionminor();
  versionminor_ = value;
  // @@protoc_insertion_point(field_set:Connection.MM.versionMinor)
}

// optional .Connection.MM.MMCommandType command = 3 [default = START];
inline bool MM::has_command() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MM::set_has_command() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MM::clear_has_command() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MM::clear_command() {
  command_ = 0;
  clear_has_command();
}
inline ::Connection::MM_MMCommandType MM::command() const {
  // @@protoc_insertion_point(field_get:Connection.MM.command)
  return static_cast< ::Connection::MM_MMCommandType >(command_);
}
inline void MM::set_command(::Connection::MM_MMCommandType value) {
  assert(::Connection::MM_MMCommandType_IsValid(value));
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:Connection.MM.command)
}

// optional int32 Elo = 4 [default = 0];
inline bool MM::has_elo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MM::set_has_elo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MM::clear_has_elo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MM::clear_elo() {
  elo_ = 0;
  clear_has_elo();
}
inline ::google::protobuf::int32 MM::elo() const {
  // @@protoc_insertion_point(field_get:Connection.MM.Elo)
  return elo_;
}
inline void MM::set_elo(::google::protobuf::int32 value) {
  set_has_elo();
  elo_ = value;
  // @@protoc_insertion_point(field_set:Connection.MM.Elo)
}

// -------------------------------------------------------------------

// ACKMM

// required bool isOk = 1;
inline bool ACKMM::has_isok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ACKMM::set_has_isok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ACKMM::clear_has_isok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ACKMM::clear_isok() {
  isok_ = false;
  clear_has_isok();
}
inline bool ACKMM::isok() const {
  // @@protoc_insertion_point(field_get:Connection.ACKMM.isOk)
  return isok_;
}
inline void ACKMM::set_isok(bool value) {
  set_has_isok();
  isok_ = value;
  // @@protoc_insertion_point(field_set:Connection.ACKMM.isOk)
}

// -------------------------------------------------------------------

// MatchFound

// -------------------------------------------------------------------

// Ready


// @@protoc_insertion_point(namespace_scope)

}  // namespace Connection

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Connection::MessageClientType_messageClientType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Connection::MessageClientType_messageClientType>() {
  return ::Connection::MessageClientType_messageClientType_descriptor();
}
template <> struct is_proto_enum< ::Connection::MessageServerType_messageServerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Connection::MessageServerType_messageServerType>() {
  return ::Connection::MessageServerType_messageServerType_descriptor();
}
template <> struct is_proto_enum< ::Connection::MM_MMCommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Connection::MM_MMCommandType>() {
  return ::Connection::MM_MMCommandType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Connection_2eproto__INCLUDED
